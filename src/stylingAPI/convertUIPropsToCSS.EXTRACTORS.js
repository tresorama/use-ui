import { removeFalsyPropsFromObject } from "../jshelpers/index.js";

// EXTRACT ALL CSS PROPS FROM A PROPS OBJECT
const EXTRACTOR = p =>
  removeFalsyPropsFromObject({
    // general
    zIndex: p.zIndex,
    pointerEvents: p.pointerEvents,
    visibility: p.visibility,
    content: p.content,
    cursor: p.cursor,
    appearance: p.appearance,
    backfaceVisibility: p.backfaceVisibility,
    contentVisibilty: p.contentVisibilty,
    filter: p.filter,
    //
    background: p.background || p.bg,
    backgroundAttachment: p.backgroundAttachment,
    backgroundBlendMode: p.backgroundBlendMode,
    backgroundClip: p.backgroundClip,
    backgroundColor: p.backgroundColor,
    backgroundImage: p.backgroundImage,
    backgroundOrigin: p.backgroundOrigin,
    backgroundPosition: p.backgroundPosition,
    backgroundPositionX: p.backgroundPositionX,
    backgroundPositionY: p.backgroundPositionY,
    backgroundRepeat: p.backgroundRepeat,
    backgroundSize: p.backgroundSize,
    //
    border: p.border,
    borderWidth: p.borderWidth,
    borderColor: p.borderColor,
    borderRadius: p.borderRadius,
    borderImage: p.borderImage,
    borderImageOutset: p.borderImageOutset,
    borderImageRepeat: p.borderImageRepeat,
    borderImageSlice: p.borderImageSlice,
    borderImageSource: p.borderImageSource,
    borderImageWidth: p.borderImageWidth,
    borderCollapse: p.borderCollapse,
    borderSpacing: p.borderSpacing,
    //
    borderTop: p.borderTop,
    borderTopStyle: p.borderTopStyle,
    borderTopWidth: p.borderTopWidth,
    borderTopColor: p.borderTopColor,
    borderTopLeftRadius: p.borderTopLeftRadius,
    borderTopRightRadius: p.borderTopRightRadius,
    borderBottom: p.borderBottom,
    borderBottomStyle: p.borderBottomStyle,
    borderBottomWidth: p.borderBottomWidth,
    borderBottomColor: p.borderBottomColor,
    borderBottomLeftRadius: p.borderBottomLeftRadius,
    borderBottomRightRadius: p.borderBottomRightRadius,
    borderRight: p.borderRight,
    borderRightStyle: p.borderRightStyle,
    borderRightWidth: p.borderRightWidth,
    borderRightColor: p.borderRightColor,
    borderLeft: p.borderLeft,
    borderLeftStyle: p.borderLeftStyle,
    borderLeftWidth: p.borderLeftWidth,
    borderLeftColor: p.borderLeftColor,
    //
    boxShadow: p.boxShadow,
    boxDecorationBreak: p.boxDecorationBreak,
    boxSizing: p.boxSizing,
    //
    color: p.color,
    clip: p.clip,
    clipPath: p.clipPath,
    //
    position: p.position,
    top: p.top,
    right: p.right,
    bottom: p.bottom,
    left: p.left,
    //
    float: p.float,
    clear: p.clear,
    //
    display: p.display,
    flexDirection: p.flexDirection,
    flexWrap: p.flexWrap,
    flex: p.flex,
    flexBasis: p.flexBasis,
    flexGrow: p.flexGrow,
    flexShrink: p.flexShrink,
    justifyContent: p.justifyContent,
    alignItems: p.alignItems,
    alignContent: p.alignContent,
    alignSelf: p.alignSelf,
    gap: p.gap,
    order: p.order,
    //
    grid: p.grid,
    gridTemplateRows: p.gridTemplateRows,
    gridTemplateColumns: p.gridTemplateColumns,
    gridTemplateAreas: p.gridTemplateAreas,
    gridAutoRows: p.gridAutoRows,
    gridAutoColumns: p.gridAutoColumns,
    gridAutoFlow: p.gridAutoFlow,
    gridArea: p.gridArea,
    growRowGap: p.growRowGap,
    gridColumnGap: p.gridColumnGap,

    //
    listStyle: p.listStyle,
    listStyleImage: p.listStyleImage,
    listStylePosition: p.listStylePosition,
    listStyleType: p.listStyleType,
    //
    mixBlendMode: p.mixBlendMode,
    //
    objectFit: p.objectFit,
    objectPosition: p.objectPosition,
    //
    opacity: p.opacity,
    //
    outline: p.outline,
    outlineColor: p.outlineColor,
    outlineOffset: p.outlineOffset,
    outlineStyle: p.outlineStyle,
    outlineWidth: p.outlineWidth,
    //
    overflow: p.overflow,
    overflowX: p.overflowX,
    overflowY: p.overflowY,
    //
    perspective: p.perspective,
    perspectiveOrigin: p.perspectiveOrigin,
    //
    resize: p.resize,
    //
    transform: p.transform,
    transformOrigin: p.transformOrigin,
    transformStyle: p.transformStyle,
    transformBox: p.transformBox,

    // dimension
    width: p.width || p.w,
    minWidth: p.minWidth || p.minW,
    maxWidth: p.maxWidth || p.maxW,
    height: p.height || p.h,
    minHeight: p.minHeight || p.minH,
    maxHeight: p.maxHeight || p.maxH,
    aspectRatio: p.aspectRatio,
    // spacing
    padding: p.padding || p.p,
    paddingTop: p.paddingTop || p.pT || p.paddingY || p.pY,
    paddingBottom: p.paddingBottom || p.pB || p.paddingY || p.pY,
    paddingLeft: p.paddingLeft || p.pL || p.paddingX || p.pX,
    paddingRight: p.paddingRight || p.pR || p.paddingX || p.pX,
    margin: p.margin || p.m,
    marginTop: p.marginTop || p.mT || p.marginY || p.mY,
    marginBottom: p.marginBottom || p.mB || p.marginY || p.mY,
    marginRight: p.marginRight || p.mR || p.marginX || p.mX,
    marginLeft: p.marginLeft || p.mL || p.marginX || p.mX,
    // text
    fontFamily: p.fontFamily,
    fontFeatureSettings: p.fontFeatureSettings,
    fontKerning: p.fontKerning,
    fontLanguageOverride: p.fontLanguageOverride,
    fontOpticalSizing: p.fontOpticalSizing,
    fontSize: p.fontSize,
    fontSizeAdjust: p.fontSizeAdjust,
    fontStretch: p.fontStretch,
    fontStyle: p.fontStyle,
    fontSynthesis: p.fontSynthesis,
    fontVariant: p.fontVariant,
    fontVariantAlternate: p.fontVariantAlternate,
    fontVariantCaps: p.fontVariantCaps,
    fontVariantEastAsian: p.fontVariantEastAsian,
    fontVariantLigatures: p.fontVariantLigatures,
    fontVariantNumeric: p.fontVariantNumeric,
    fontVariantPosition: p.fontVariantPosition,
    fontVariationSettings: p.fontVariationSettings,
    fontWeight: p.fontWeight,
    //
    textAlign: p.textAlign,
    textAlignLast: p.textAlignLast,
    textCombineUpright: p.textCombineUpright,
    textDecoration: p.textDecoration,
    textDecorationColor: p.textDecorationColor,
    textDecorationLine: p.textDecorationLine,
    textDecorationSkip: p.textDecorationSkip,
    textDecorationSkipLink: p.textDecorationSkipLink,
    textDecorationStyle: p.textDecorationStyle,
    textDecorationThickness: p.textDecorationThickness,
    textEmphasis: p.textEmphasis,
    textEmphasisColor: p.textEmphasisColor,
    textEmphasisPosition: p.textEmphasisPosition,
    textEmphasisStyle: p.textEmphasisStyle,
    textIndent: p.textIndent,
    textJustify: p.textJustify,
    textOrientation: p.textOrientation,
    textOverflow: p.textOverflow,
    textRendering: p.textRendering,
    textShadow: p.textShadow,
    textSizeAdjust: p.textSizeAdjust,
    textTransform: p.textTransform,
    textUnderlineOffset: p.textUnderlineOffset,
    textUnderlinePosition: p.textUnderlinePosition,
    //
    hyphens: p.hyphens,
    letterSpacing: p.letterSpacing,
    lineBreak: p.lineBreak,
    lineHeight: p.lineHeight,
    lineHeightStep: p.lineHeightStep,
    //animation
    animation: p.animation,
    animationName: p.animationName,
    animationDuration: p.animationDuration,
    animationDelay: p.animationDelay,
    animationDirection: p.animationDirection,
    animationFillMode: p.animationFillMode,
    animationIterationCount: p.animationIterationCount,
    animationPlayState: p.animationPlayState,
    animationTimingFunction: p.animationTimingFunction,
    transition: p.transition,
    transitionDelay: p.transitionDelay,
    transitionDuration: p.transitionDuration,
    transitionProperty: p.transitionProperty,
    transitionTimingFunction: p.transitionTimingFunction,
  });

export { EXTRACTOR };
